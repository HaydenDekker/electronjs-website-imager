pipeline {
    agent any
    
    environment {
        SSH_CREDENTIALS = credentials('06375e47-11d5-49ee-a096-94ba50ba035e') 
        // Replace with your SSH credentials ID - non root - 6b4b4214-61f8-4328-a565-f14961fb227c
        REMOTE_SERVER = '192.168.8.99' // Replace with your remote server hostname or IP
        REMOTE_PROJECT_FOLDER = 'Documents/website-imager'
        
    
    }
    
    stages {
        
        stage('Checkout Git Repository') {
            steps {
                // Specify the Git repository URL and branch
                checkout([$class: 'GitSCM', branches: [[name: 'main']], userRemoteConfigs: [[url: 'https://github.com/HaydenDekker/electronjs-website-imager/']]])
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                // Install Node.js and npm (if not already installed)
                    def nvmInstalled = sh(script: 'command -v nvm', returnStatus: true)
                    if (nvmInstalled != 0) {
                        sh '''
                            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
                            export NVM_DIR="$HOME/.nvm"
                            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                            [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
                            nvm install 18
                            nvm use 18
                            npm install
                            npm run compile
                        '''
                    }
                }
                
            }
        }

        stage('Copy') {
            steps {
                sshagent(credentials: ['6b4b4214-61f8-4328-a565-f14961fb227c']) {
                    sh """
                        ssh -v -o StrictHostKeyChecking=no -l hayden ${REMOTE_SERVER} "if [ -z \"\$(ls -A ${REMOTE_PROJECT_FOLDER})\" ]; then echo 'Directory is empty'; else rm -r ${REMOTE_PROJECT_FOLDER}/*; fi"
                        scp -r ./dist hayden@${REMOTE_SERVER}:${REMOTE_PROJECT_FOLDER}
                        scp -r ./node_modules hayden@${REMOTE_SERVER}:${REMOTE_PROJECT_FOLDER}
                        scp -r ./package.json hayden@${REMOTE_SERVER}:${REMOTE_PROJECT_FOLDER}
                        scp -r ./deploy/runtime_env hayden@${REMOTE_SERVER}:${REMOTE_PROJECT_FOLDER}
                        """
                }
            }
        }

        stage('Deploy') {
            steps {
                sshagent(credentials: ['6b4b4214-61f8-4328-a565-f14961fb227c']) {
                    sh """
                        ssh -v -o StrictHostKeyChecking=no -l hayden ${REMOTE_SERVER} "cd ${REMOTE_PROJECT_FOLDER}/runtime_env && docker build -t imager . && docker run --privileged --detach -p 8084:8084 -v /home/hayden/Documents/website-imager:/app imager"
                    """
                }
            }
        }
    }
    
   
}