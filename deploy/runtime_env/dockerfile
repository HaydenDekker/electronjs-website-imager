FROM ubuntu

ENV BASE_DIR_IMAGES=images
ENV IMAGER_PORT=8080
ENV NVM_DIR=/usr/local/.nvm
ENV NODE_VERSION=18.18.2

COPY ./20-dummy.conf /etc/X11/xorg.conf.d/

RUN apt-get update && apt-get install -y curl

RUN mkdir -p /usr/local/.nvm

# Install NVM
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash

# Source NVM and install the specified Node.js version
RUN . "$NVM_DIR/nvm.sh" && . "$NVM_DIR/bash_completion" && nvm install $NODE_VERSION && nvm use $NODE_VERSION

RUN echo $(ls $NVM_DIR/versions/node)

ENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules
ENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

RUN ls -la $NVM_DIR/versions/node/v$NODE_VERSION/bin

RUN node -v
RUN npm -v

RUN apt-get install -y build-essential clang libdbus-1-dev libgtk-3-dev \
                       libnotify-dev libasound2-dev libcap-dev \
                       libcups2-dev libxtst-dev \
                       libxss1 libnss3-dev gcc-arm-linux-gnueabihf curl \
                       gperf bison python3-dbusmock openjdk-8-jre

ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y
RUN apt install -y xserver-xorg-video-dummy

ENV DISPLAY=:3
COPY startx /usr/local/bin
RUN chmod +x /usr/local/bin/startx

VOLUME /app

WORKDIR /app
RUN groupadd -g 1020 myuser
RUN useradd -u 1020 -g myuser -m -s /bin/bash myuser
RUN chown myuser:myuser /usr/local/bin/startx

USER myuser
RUN ls -la /usr/local/bin/

ENV NVM_DIR=/usr/local/.nvm
ENV NODE_PATH=$NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules
ENV PATH=$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

CMD ["/usr/local/bin/startx"]